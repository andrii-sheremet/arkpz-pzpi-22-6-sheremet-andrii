Міністерство освіти і науки України
Харківський національний університет радіоелектроніки



Кафедра Програмна інженерія




ЗВІТ
З лабораторної роботи №2
з дисципліни «Аналіз та рефакторинг коду»






Виконав:									Перевірив:
Ст. групи ПЗПІ-22-6					          ст. викладач каф. ПІ,
Шеремет А. Г.							Сокорчук Ігор Петрович




Харків 2025
РОЗРОБКА БІЗНЕС-ЛОГІКИ ТА ФУНКЦІЙ АДМІНІСТРУВАННЯ СЕРВЕРНОЇ ЧАСТИНИ ПРОГРАМНОЇ СИСТЕМИ

1.1 Мета роботи
Метою роботи є розробка бізнес-логіки та функцій адміністрування серверної частини програмної системи.

1.2 Хід роботи
1.2.1	Розробити бізнес логіку серверної частини програмної системи. 
Розробка бізнес-логіки серверної частини програмної системи включає створення основних правил роботи системи, обробку запитів від користувачів та управління даними. Спочатку визначаються основні сутності, їхні властивості та взаємозв’язки. Далі створюються методи для додавання, редагування, видалення та отримання інформації з бази даних.
Важливим етапом є впровадження системи авторизації та аутентифікації, яка дозволяє користувачам безпечно входити в систему, отримуючи відповідні права доступу. Також реалізується система обробки помилок і виняткових ситуацій, щоб уникнути збоїв у роботі серверної частини.
Для підвищення продуктивності можуть використовуватися механізми кешування та оптимізації запитів до бази даних. Крім того, бізнес-логіка повинна забезпечувати захист даних, наприклад, через шифрування та перевірку вхідних даних для запобігання атакам.
Завдяки правильній побудові бізнес-логіки система зможе працювати стабільно, ефективно обробляти запити та відповідати вимогам користувачів.

1.2.2	 Розробити функції адміністрування серверної частини програмної системи. 
Розробка функцій адміністрування серверної частини програмної системи передбачає створення механізмів для керування користувачами, налаштуванням системи, контролю доступу та моніторингу роботи сервера. Основним завданням є реалізація панелі адміністратора, яка дозволяє здійснювати управління ключовими аспектами системи, такими як створення, редагування та видалення користувачів, призначення ролей і прав доступу.
Також передбачається розробка функцій журналювання дій користувачів та ведення логів системних подій, що дозволить адміністратору відстежувати активність у системі, виявляти помилки та потенційні загрози безпеці. Важливим елементом є реалізація механізмів резервного копіювання та відновлення даних, що забезпечить стабільність та безпеку роботи системи у разі збоїв.
Крім того, адміністратор повинен мати змогу керувати конфігурацією системи, змінювати параметри роботи серверної частини, а також контролювати продуктивність та завантаженість ресурсів. Для цього можуть бути використані спеціальні інтерфейси моніторингу та аналітики.
Таким чином, функції адміністрування дозволять забезпечити ефективне управління серверною частиною, покращити безпеку, зручність використання та стабільність програмної системи.

1.2.3	Створити програмну реалізацію бізнес логіки та функцій адміністрування серверної частини. 
Створення програмної реалізації бізнес-логіки та функцій адміністрування серверної частини передбачає розробку програмних компонентів, які реалізують визначену бізнес-логіку та забезпечують ефективне адміністрування системи. Для цього необхідно реалізувати серверну частину, що обробляє запити клієнтів, обчислює необхідні дані відповідно до бізнес-правил, а також надає адміністраторам інструменти для керування системою.
Першим кроком є розробка API для взаємодії з базою даних, де зберігаються всі дані про користувачів, транзакції, налаштування тощо. Для цього використовуються відповідні методи для створення, оновлення та видалення даних, а також для перевірки їх достовірності згідно з бізнес-логікою. Реалізація має забезпечувати надійність та безпеку взаємодії з даними, включаючи валідацію введених даних та обробку помилок.
Наступним етапом є розробка панелі адміністратора, що дозволяє здійснювати управління користувачами, їх ролями та правами доступу. Адміністратор повинен мати можливість створювати нові облікові записи, редагувати існуючі, призначати або змінювати ролі користувачів та відстежувати активність системи через лог-файли.
Додатково, створюються функції для резервного копіювання даних, моніторингу продуктивності та ресурсів серверної частини, що дозволяє адміністратору здійснювати контроль за роботою сервера, виявляти потенційні проблеми та усувати їх вчасно.
Вся реалізація повинна бути ефективною, безпечною та зручною для користувачів, а також відповідати вимогам щодо масштабованості та продуктивності для забезпечення безперебійної роботи системи.

1.2.4	Перевірити роботу серверної частини системи.
Перевіримо роботу створеної системи. 
Для перевірки роботи серверної частини системи я виконую кілька етапів тестування, щоб впевнитись у її коректності та стабільності.
1.	Тестування API-методів:
Я починаю з перевірки всіх доступних API-методів. Для цього роблю запити через Postman або інший аналогічний інструмент. Перевіряю, чи правильно система обробляє запити на додавання, зміну та видалення даних, а також чи повертаються правильні статуси (200 для успіху, 404 для не знайденого ресурсу, 500 для помилок сервера). Крім того, я перевіряю, чи всі необхідні поля присутні в відповіді та чи не виникають помилки при обробці вхідних даних.
2.	Тестування роботи з базою даних:
Наступним кроком перевіряю взаємодію серверної частини з базою даних. Для цього проводжу операції з додавання, редагування та видалення даних через API, перевіряючи, чи змінюються відповідні записи в базі. Також тестую різні запити, наприклад, з використанням фільтрації та сортування, щоб упевнитися, що вони виконуються коректно і ефективно. Перевіряю, чи немає проблем із транзакціями та збереженням даних після перезапуску сервера.
3.	Перевірка функцій адміністрування:
Далі тестую функції адміністрування. Здійснюю входи в систему з правами адміністратора, щоб перевірити доступ до всіх функцій: зміна ролей, додавання/видалення користувачів, управління доступом до різних частин системи. Перевіряю, чи працює система прав доступу, чи не можна виконати операції, які не відповідають ролям користувача.

1.3 Висновки
Під час виконання роботи з розробки бізнес-логіки та функцій адміністрування серверної частини програмної системи було створено функціональну і ефективну серверну частину, що забезпечує коректну обробку запитів, взаємодію з базою даних та реалізацію управління користувачами і доступом. Розроблена бізнес-логіка відповідає вимогам проекту, а функції адміністрування надають адміністраторам повний контроль над системою, що забезпечує її безпеку та стабільність. У процесі тестування було проведено перевірку на коректність роботи API, взаємодію з базою даних, перевірку навантаження та безпеку. Усі функції працюють згідно з вимогами, виявлені помилки були виправлені, і система готова до подальшого використання. Завдяки ретельному тестуванню і оптимізації серверна частина є стабільною і ефективною для подальшої інтеграції з іншими частинами програмної системи.

1.4 Список використаних джерел 
1. PostgreSQL – офіційна документація. URL: https://www.postgresql. org/docs/ (дата звернення: 19.12.2024).
2. Python – офіційний сайт. URL: https://www.python.org/ (дата звернення: 19.12.2024).
4. Flask – офіційна документація. URL: https://flask.palletsprojects.com/ (дата звернення: 19.12.2024).
5. SQLAlchemy – офіційна документація. URL: https://www.sqlalchemy.org/ (дата звернення: 19.12.2024).

1.5 Посилання
Посилання на GitHub репозиторій:
https://github.com/andrii-sheremet/arkpz-pzpi-22-6-sheremet-andrii/tree/main/Task3

